var helpers = require("../../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _loginViewLoginViewJsx = require('../login-view/login-view.jsx');
  var _registrationViewRegistrationViewJsx = require('../registration-view/registration-view.jsx');
  var _movieCardMovieCardJsx = require('../movie-card/movie-card.jsx');
  var _movieViewMovieViewJsx = require('../movie-view/movie-view.jsx');
  require("./main-view.scss");
  var _jsxFileName = "C:\\Users\\camel\\Documents\\GitHub\\myFlix-client\\src\\components\\main-view\\main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        movies: [],
        selectedMovie: null,
        user: null,
        register: null
      };
    }
    componentDidMount() {
      _axiosDefault.default.get('https://cnjlv.herokuapp.com/movies').then(response => {
        this.setState({
          movies: response.data
        });
      }).catch(error => {
        console.log(error);
      });
    }
    setSelectedMovie(newSelectedMovie) {
      this.setState({
        selectedMovie: newSelectedMovie
      });
    }
    onLoggedIn(user) {
      this.setState({
        user
      });
    }
    onRegister(register) {
      this.setState({
        register
      });
    }
    render() {
      const {movies, selectedMovie} = this.state;
      if (!this.state.user) return (
        /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
          onLoggedIn: user => this.onLoggedIn(user),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54,
            columnNumber: 34
          }
        })
      );
      if (!register) return (
        /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationViewJsx.RegistrationView, {
          onRegister: register => this.onRegister(register),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 56,
            columnNumber: 27
          }
        })
      );
      if (movies.length === 0) return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58,
            columnNumber: 37
          }
        })
      );
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61,
            columnNumber: 7
          }
        }, selectedMovie ? /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieViewJsx.MovieView, {
          movie: selectedMovie,
          onBackClick: newSelectedMovie => {
            this.setSelectedMovie(newSelectedMovie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 63,
            columnNumber: 13
          }
        }) : movies.map(movie => /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCardJsx.MovieCard, {
          key: movie._id,
          movie: movie,
          onMovieClick: newSelectedMovie => {
            this.setSelectedMovie(newSelectedMovie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65,
            columnNumber: 13
          }
        })))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
